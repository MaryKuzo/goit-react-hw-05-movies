{"version":3,"file":"static/js/395.ee982a0d.chunk.js","mappings":"oKAqCA,IAlCmB,SAAC,GAAgC,IAA9BA,EAA6B,EAA7BA,OAA6B,IAArBC,UAAAA,OAAqB,MAAT,GAAS,EAC3CC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,gCACGF,IAAa,wBAAMA,KACpB,wBACGD,EAAOI,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,KAAd,OACV,yBACE,SAAC,KAAD,CACEC,GAAE,kBAAaH,GACfI,MAAO,CAAEC,KAAMR,GAFjB,SAIGI,GAASC,KALLF,EADC,QAcnB,C,+ICtBKM,EAAM,mCACNC,EAAW,gCAEV,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6FACCC,EADD,UACUF,EADV,sCACgDD,EADhD,4BAEkBI,EAAAA,EAAAA,IAAUD,GAF5B,cAECE,EAFD,yBAGEA,EAASC,MAHX,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA6Bb,GAA7B,gFACCS,EADD,UACUF,EADV,iBAC2BP,EAD3B,oBACyCM,EADzC,4BAEkBI,EAAAA,EAAAA,IAAUD,GAF5B,cAECE,EAFD,yBAGEA,EAASC,MAHX,kEAMA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,gFACCN,EADD,UACUF,EADV,gCAC0CD,EAD1C,kBACuDS,EADvD,4BAEkBL,EAAAA,EAAAA,IAAUD,GAF5B,cAECE,EAFD,yBAGEA,GAHF,kE,sFC+BP,UA3CqB,WAAO,IAAD,EACzB,GAAwCK,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMH,EAAK,UAAGE,EAAaE,IAAI,gBAApB,QAAgC,GAC3C,GAA4BC,EAAAA,EAAAA,UAAS,MAArC,eAAOzB,EAAP,KAAe0B,EAAf,KA0BA,OAdAC,EAAAA,EAAAA,YAAU,WACM,KAAVP,GAKJD,EAAAA,EAAAA,IAAeC,GACZQ,MAAK,SAAAZ,GACJU,EAAUV,EAASC,KAAKY,QACzB,IACAC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,IARZL,EAAU,KASb,GAAE,CAACN,KAIF,4BACE,kBACEc,KAAK,OACLC,MAAOf,EACPgB,SA7BoB,SAAAC,GACxB,IAAMC,EAAaD,EAAEE,OAAOJ,MACT,KAAfG,EACFhB,EAAakB,OAAO,SAEpBlB,EAAamB,IAAI,QAASH,GAE5Bf,EAAgBD,EACjB,IAwBItB,IAAU,SAAC,IAAD,CAAYA,OAASA,MAKrC,C","sources":["components/MoviesList/MoviesList.jsx","fetchAPI/FetchApi.jsx","pages/MoviesSearch/MoviesSearch.jsx"],"sourcesContent":["import { Link, useLocation } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\n\nconst MoviesList = ({ movies, titlePage = '' }) => {\n  const location = useLocation();\n\n  return (\n    <>\n      {titlePage && <h1>{ titlePage }</h1> }\n      <ul>\n        {movies.map(({ id, title, name }) => (\n          <li key={id}>\n            <Link\n              to={`/movies/${id}`}\n              state={{ from: location }}\n            >\n              {title || name}\n            </Link>\n          </li>\n))}\n\n      </ul>\n    </>\n  )\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n      name: PropTypes.string\n    }).isRequired\n  ),\n    titlePage: PropTypes.string,\n}\n\nexport default MoviesList;\n","import axios from \"axios\";\n\nconst KEY = 'd79036dd91636485f959ac267909ee3a';\nconst BASE_URL = 'https://api.themoviedb.org/3/'\n\nexport async function getTrandingMovies () {\n  const url = `${BASE_URL}trending/movie/day?api_key=${KEY}&language=en-US`;\n  const response = await axios.get(url)\n  return response.data\n\n}\n\nexport async function getMoviesById(id) {\n  const url = `${BASE_URL}movie/${id}?api_key=${KEY}&language=en-US`;\n  const response = await axios.get(url);\n  return response.data;\n}\n\nexport async function getMoviesQuery(query) {\n  const url = `${BASE_URL}search/movie?api_key=${KEY}&query=${query}&language=en-US`;\n  const response = await axios.get(url);\n  return response\n}\n","import { useSearchParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { getMoviesQuery } from \"fetchAPI/FetchApi\";\nimport MoviesList from \"components/MoviesList/MoviesList\";\n\n\nconst MoviesSearch = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n  const [movies, setMovies] = useState(null)\n\n  const updateQueryString = e => {\n    const movieValue = e.target.value;\n    if (movieValue === '') {\n      searchParams.delete('query')\n    } else {\n      searchParams.set('query', movieValue)\n    }\n    setSearchParams(searchParams)\n  }\n\n  useEffect(() => {\n    if (query === '') {\n      setMovies(null)\n      return;\n    }\n\n    getMoviesQuery(query)\n      .then(response => {\n        setMovies(response.data.results);\n      })\n      .catch(error => console.log(error));\n  }, [query]);\n\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        value={query}\n        onChange={updateQueryString}\n      />\n\n      {movies && <MoviesList movies={ movies } /> }\n\n\n    </div>\n  )\n}\nexport default MoviesSearch\n"],"names":["movies","titlePage","location","useLocation","map","id","title","name","to","state","from","KEY","BASE_URL","getTrandingMovies","url","axios","response","data","getMoviesById","getMoviesQuery","query","useSearchParams","searchParams","setSearchParams","get","useState","setMovies","useEffect","then","results","catch","error","console","log","type","value","onChange","e","movieValue","target","delete","set"],"sourceRoot":""}