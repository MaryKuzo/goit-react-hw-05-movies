{"version":3,"file":"static/js/499.eaa6bc9e.chunk.js","mappings":"+PAGaA,EAAmBC,EAAAA,EAAAA,IAAH,6CAIhBC,EAAaD,EAAAA,EAAAA,GAAH,oHAOVE,EAASF,EAAAA,EAAAA,GAAH,mEAKNG,EAAUH,EAAAA,EAAAA,EAAH,oEAKPI,EAAaJ,EAAAA,EAAAA,KAAH,2CAIVK,EAAcL,EAAAA,EAAAA,KAAH,sF,SCyBxB,EAvCgB,WACd,OAA8BM,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAcR,IAXAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAeH,GACZI,MAAK,SAAAC,GACJN,EAAWM,GACXC,QAAQC,IAAIF,EACb,IACAG,OAAM,SAAAC,GACLH,QAAQC,IAAIE,EACb,GACJ,GAAE,CAACT,IAECF,EAIL,OACE,+BACE,SAACR,EAAD,UACGQ,EAAQY,OAAS,GAChB,wBACGZ,EAAQa,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,UAACtB,EAAD,YACE,UAACC,EAAD,WAAQ,YAAQ,SAACE,EAAD,UAAakB,QAC7B,SAACnB,EAAD,UAAUoB,MAFKF,EADN,OAQf,SAAChB,EAAD,UAAa,kBAKtB,C,mMClDKmB,EAAM,mCACNC,EAAW,gCAEV,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6FACCC,EADD,UACUF,EADV,sCACgDD,EADhD,4BAEkBI,EAAAA,EAAAA,IAAUD,GAF5B,cAECE,EAFD,yBAGEA,EAASf,MAHX,kEAOA,SAAegB,EAAtB,+CAAO,OAAP,oBAAO,WAA6BT,GAA7B,gFACCM,EADD,UACUF,EADV,iBAC2BJ,EAD3B,oBACyCG,EADzC,4BAEkBI,EAAAA,EAAAA,IAAUD,GAF5B,cAECE,EAFD,yBAGEA,EAASf,MAHX,kEAMA,SAAeiB,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,gFACCL,EADD,UACUF,EADV,gCAC0CD,EAD1C,kBACuDQ,EADvD,4BAEkBJ,EAAAA,EAAAA,IAAUD,GAF5B,cAECE,EAFD,yBAGEA,GAHF,kEAMA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA4BZ,GAA5B,gFACCM,EADD,UACUF,EADV,iBAC2BJ,EAD3B,4BACiDG,EADjD,4BAEkBI,EAAAA,EAAAA,IAAUD,GAF5B,cAECE,EAFD,yBAGEA,EAASf,KAAKoB,MAHhB,kEAMA,SAAetB,EAAtB,+CAAO,OAAP,oBAAO,WAA8BS,GAA9B,gFACCM,EADD,UACUF,EADV,iBAC2BJ,EAD3B,4BACiDG,EADjD,4BAEkBI,EAAAA,EAAAA,IAAUD,GAF5B,cAECE,EAFD,yBAGEA,EAASf,KAAKqB,SAHhB,kE","sources":["pages/Reviews/Reviews.styled.jsx","pages/Reviews/Reviews.jsx","services/FetchApi.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\n\nexport const ReviewsContainer = styled.div`\n  margin-top: 20px;\n`;\n\nexport const ReviewItem = styled.li`\n  margin-bottom: 20px;\n  padding: 10px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n`;\n\nexport const Author = styled.h3`\n  font-size: 24px;\n  margin-bottom: 5px;\n`;\n\nexport const Content = styled.p`\n  font-size: 18px;\n  line-height: normal;\n`;\n\nexport const AuthorSpan = styled.span`\n  color: #D43369;\n`;\n\nexport const ReviewsSpan = styled.span`\n  color: #D43369;\n  font-size: 24px;\n  padding-left: 20px;\n`;\n","import { useParams } from \"react-router-dom\";\nimport React, { useEffect, useState } from 'react';\nimport { getMovieReview } from 'services/FetchApi';\nimport {\n  ReviewsContainer,\n  ReviewItem,\n  Author,\n  Content,\n  AuthorSpan,\n  ReviewsSpan\n} from './Reviews.styled';\n\n\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n\n  useEffect(() => {\n    getMovieReview(movieId)\n      .then(data => {\n        setReviews(data);\n        console.log(data);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }, [movieId]);\n\n  if (!reviews) {\n    return\n  }\n\n  return (\n    <>\n      <ReviewsContainer>\n        {reviews.length > 0 ? (\n          <ul>\n            {reviews.map(({ id, author, content }) => (\n              <ReviewItem key={id}>\n                <Author>Author: <AuthorSpan>{author}</AuthorSpan></Author>\n                <Content>{content}</Content>\n              </ReviewItem>\n            ))}\n          </ul>\n        ) : (\n          <ReviewsSpan>No Reviews</ReviewsSpan>\n        )}\n      </ReviewsContainer>\n    </>\n  )\n}\nexport default Reviews\n","import axios from \"axios\";\n\nconst KEY = 'd79036dd91636485f959ac267909ee3a';\nconst BASE_URL = 'https://api.themoviedb.org/3/'\n\nexport async function getTrandingMovies () {\n  const url = `${BASE_URL}trending/movie/day?api_key=${KEY}&language=en-US`;\n  const response = await axios.get(url)\n  return response.data\n\n}\n\nexport async function getMoviesById(id) {\n  const url = `${BASE_URL}movie/${id}?api_key=${KEY}&language=en-US`;\n  const response = await axios.get(url);\n  return response.data;\n}\n\nexport async function getMoviesQuery(query) {\n  const url = `${BASE_URL}search/movie?api_key=${KEY}&query=${query}&language=en-US`;\n  const response = await axios.get(url);\n  return response\n}\n\nexport async function getMovieCast(id) {\n  const url = `${BASE_URL}movie/${id}/credits?api_key=${KEY}&language=en-US`;\n  const response = await axios.get(url);\n  return response.data.cast;\n}\n\nexport async function getMovieReview(id) {\n  const url = `${BASE_URL}movie/${id}/reviews?api_key=${KEY}&language=en-US`;\n  const response = await axios.get(url);\n  return response.data.results;\n}\n"],"names":["ReviewsContainer","styled","ReviewItem","Author","Content","AuthorSpan","ReviewsSpan","useState","reviews","setReviews","movieId","useParams","useEffect","getMovieReview","then","data","console","log","catch","error","length","map","id","author","content","KEY","BASE_URL","getTrandingMovies","url","axios","response","getMoviesById","getMoviesQuery","query","getMovieCast","cast","results"],"sourceRoot":""}