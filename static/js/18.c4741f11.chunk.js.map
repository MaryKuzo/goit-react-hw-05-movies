{"version":3,"file":"static/js/18.c4741f11.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","pages/MoviesSearch/MoviesSearch.styled.jsx","pages/MoviesSearch/MoviesSearch.jsx","services/FetchApi.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\nimport { MdLocalMovies } from 'react-icons/md';\n\nexport const StyledFilmIcon = styled(MdLocalMovies)`\n  fill: #D43369;\n  margin-right: 5px;\n  vertical-align: middle;\n`;\n\nexport const MoviesListContainer = styled.div`\n  margin-top: 20px;\n`;\n\nexport const Title = styled.h2`\n  font-size: 28px;\n  margin-bottom: 20px;\n  padding-left: 40px;\n  display: flex;\n  align-items: center;\n`;\n\nexport const MovieItem = styled.li`\n  margin-bottom: 10px;\n`;\n\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n  color: #333;\n\n  &:hover {\n    color: #D43369;\n  }\n`;\n","import React from 'react';\nimport {  useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  MoviesListContainer,\n  Title,\n  MovieItem,\n  MovieLink,\n  StyledFilmIcon\n} from './MoviesList.styled';\n\n\nconst MoviesList = ({ movies, titlePage = '' }) => {\n  const location = useLocation();\n\n  return (\n    <MoviesListContainer>\n      {titlePage && <Title><StyledFilmIcon />{titlePage}</Title>}\n      <ul>\n        {movies.map(({ id, title, name }) => (\n          <MovieItem key={id}>\n            <MovieLink to={`/movies/${id}`} state={{ from: location }}>\n              {title || name}\n            </MovieLink>\n          </MovieItem>\n        ))}\n      </ul>\n    </MoviesListContainer>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n      name: PropTypes.string,\n    }).isRequired\n  ),\n  titlePage: PropTypes.string,\n};\n\nexport default MoviesList;\n","import styled from '@emotion/styled';\nimport { BsFillSearchHeartFill } from 'react-icons/bs';\n\nexport const MoviesSearchContainer = styled.div`\n  padding: 20px;\n`;\n\nexport const SearchInput = styled.input`\n  width: 500px;\n  padding: 10px;\n  font-size: 16px;\n  border: 1px solid #ccc;\n  transition: border-color 0.3s;\n  padding-left: 30px;\n  border-radius: 10px;\n\n  &:focus {\n    border-color: #D43369;\n  }\n\n`;\nexport const SearchIcon = styled(BsFillSearchHeartFill)`\n  position: absolute;\n  top: 20px;\n  transform: translateY(-50%);\n  left: 500px;\n  font-size: 20px;\n  color: ;\n`;\nexport const SearchWrapper = styled.div`\n  position: relative;\n`\nexport const MoviesListContainer = styled.div`\n  margin-top: 20px;\n`;\n","import React from 'react';\nimport {\n  MoviesSearchContainer,\n  SearchInput,\n  MoviesListContainer,\n  SearchWrapper,\n  SearchIcon\n} from './MoviesSearch.styled';\nimport { useSearchParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getMoviesQuery } from 'services/FetchApi';\nimport MoviesList from 'components/MoviesList/MoviesList';\n\n\nconst MoviesSearch = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n  const [movies, setMovies] = useState(null);\n\n  const updateQueryString = (e) => {\n    const movieValue = e.target.value;\n    if (movieValue === '') {\n      searchParams.delete('query');\n    } else {\n      searchParams.set('query', movieValue);\n    }\n    setSearchParams(searchParams);\n  };\n\n  useEffect(() => {\n    if (query === '') {\n      setMovies(null);\n      return;\n    }\n\n    getMoviesQuery(query)\n      .then((response) => {\n        setMovies(response.data.results);\n      })\n      .catch((error) => console.log(error));\n  }, [query]);\n\n  return (\n    <MoviesSearchContainer>\n      <SearchWrapper>\n        <SearchInput\n        type=\"text\"\n        value={query}\n        onChange={updateQueryString}\n        placeholder=\"Search movies...\"\n        />\n        <SearchIcon/>\n      </SearchWrapper>\n      {movies && (\n        <MoviesListContainer>\n          <MoviesList movies={movies} />\n        </MoviesListContainer>\n      )}\n    </MoviesSearchContainer>\n  );\n};\n\nexport default MoviesSearch;\n\n","import axios from \"axios\";\n\nconst KEY = 'd79036dd91636485f959ac267909ee3a';\nconst BASE_URL = 'https://api.themoviedb.org/3/'\n\nexport async function getTrandingMovies () {\n  const url = `${BASE_URL}trending/movie/day?api_key=${KEY}&language=en-US`;\n  const response = await axios.get(url)\n  return response.data\n\n}\n\nexport async function getMoviesById(id) {\n  const url = `${BASE_URL}movie/${id}?api_key=${KEY}&language=en-US`;\n  const response = await axios.get(url);\n  return response.data;\n}\n\nexport async function getMoviesQuery(query) {\n  const url = `${BASE_URL}search/movie?api_key=${KEY}&query=${query}&language=en-US`;\n  const response = await axios.get(url);\n  return response\n}\n\nexport async function getMovieCast(id) {\n  const url = `${BASE_URL}movie/${id}/credits?api_key=${KEY}&language=en-US`;\n  const response = await axios.get(url);\n  return response.data.cast;\n}\n\nexport async function getMovieReview(id) {\n  const url = `${BASE_URL}movie/${id}/reviews?api_key=${KEY}&language=en-US`;\n  const response = await axios.get(url);\n  return response.data.results;\n}\n"],"names":["StyledFilmIcon","styled","MdLocalMovies","MoviesListContainer","Title","MovieItem","MovieLink","Link","movies","titlePage","location","useLocation","map","id","title","name","to","state","from","MoviesSearchContainer","SearchInput","SearchIcon","BsFillSearchHeartFill","SearchWrapper","useSearchParams","searchParams","setSearchParams","query","get","useState","setMovies","useEffect","getMoviesQuery","then","response","data","results","catch","error","console","log","type","value","onChange","e","movieValue","target","delete","set","placeholder","MoviesList","KEY","BASE_URL","getTrandingMovies","url","axios","getMoviesById","getMovieCast","cast","getMovieReview"],"sourceRoot":""}